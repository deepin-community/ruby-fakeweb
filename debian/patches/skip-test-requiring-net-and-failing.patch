Description: Skip tests that require net and are failing.
Author: Utkarsh Gupta <guptautkarsh2102@gmail.com>
Bug-Debian: https://bugs.debian.org/952042
Last-Update: 2020-04-02

--- a/test/test_allow_net_connect.rb
+++ b/test/test_allow_net_connect.rb
@@ -1,7 +1,7 @@
 require 'test_helper'
 
 class TestFakeWebAllowNetConnect < Test::Unit::TestCase
-  def test_unregistered_requests_are_passed_through_when_allow_net_connect_is_true
+  def _test_unregistered_requests_are_passed_through_when_allow_net_connect_is_true
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request
     Net::HTTP.get(URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss"))
@@ -14,25 +14,25 @@
     end
   end
 
-  def test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_string
+  def _test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_string
     FakeWeb.allow_net_connect = "http://images.apple.com/main/rss/hotnews/hotnews.rss"
     setup_expectations_for_real_apple_hot_news_request
     Net::HTTP.get(URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss"))
   end
 
-  def test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_string_with_default_port
+  def _test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_string_with_default_port
     FakeWeb.allow_net_connect = "http://images.apple.com:80/main/rss/hotnews/hotnews.rss"
     setup_expectations_for_real_apple_hot_news_request
     Net::HTTP.get(URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss"))
   end
 
-  def test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_uri
+  def _test_unregistered_requests_are_passed_through_when_allow_net_connect_is_the_same_uri
     FakeWeb.allow_net_connect = URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss")
     setup_expectations_for_real_apple_hot_news_request
     Net::HTTP.get(URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss"))
   end
 
-  def test_unregistered_requests_are_passed_through_when_allow_net_connect_is_a_matching_regexp
+  def _test_unregistered_requests_are_passed_through_when_allow_net_connect_is_a_matching_regexp
     FakeWeb.allow_net_connect = %r[^http://images\.apple\.com]
     setup_expectations_for_real_apple_hot_news_request
     Net::HTTP.get(URI.parse("http://images.apple.com/main/rss/hotnews/hotnews.rss"))
--- a/test/test_fake_web.rb
+++ b/test/test_fake_web.rb
@@ -309,7 +309,7 @@
     assert_equal 10, request.content_length
   end
 
-  def test_real_post_with_body_sets_the_request_body
+  def _test_real_post_with_body_sets_the_request_body
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request :method => "POST",
       :path => "/posts", :request_body => "title=Test"
@@ -381,7 +381,7 @@
     assert_nil response.body
   end
 
-  def test_real_http_request
+  def _test_real_http_request
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request
 
@@ -393,7 +393,7 @@
     assert resp.body.include?('News')
   end
 
-  def test_real_http_request_with_undocumented_full_uri_argument_style
+  def _test_real_http_request_with_undocumented_full_uri_argument_style
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request(:path => 'http://images.apple.com/main/rss/hotnews/hotnews.rss')
 
@@ -405,7 +405,7 @@
     assert resp.body.include?('News')
   end
 
-  def test_real_https_request
+  def _test_real_https_request
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request(:port => 443)
 
@@ -417,7 +417,7 @@
     assert response.body.include?('News')
   end
 
-  def test_real_request_on_same_domain_as_mock
+  def _test_real_request_on_same_domain_as_mock
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request
 
--- a/test/test_fake_web_open_uri.rb
+++ b/test/test_fake_web_open_uri.rb
@@ -17,7 +17,7 @@
     assert_equal 'foo', open('http://mock/test_string.txt').string
   end
 
-  def test_real_open
+  def _test_real_open
     FakeWeb.allow_net_connect = true
     setup_expectations_for_real_apple_hot_news_request
     resp = open('http://images.apple.com/main/rss/hotnews/hotnews.rss')
