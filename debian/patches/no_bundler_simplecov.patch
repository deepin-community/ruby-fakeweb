Description: do not use bundler or simplecov in tests
Origin: vendor
Author: CÃ©dric Boutillier <boutil@debian.org>
Forwarded: not-needed
Last-Update: 2018-03-14

--- a/test/test_helper.rb
+++ b/test/test_helper.rb
@@ -1,8 +1,3 @@
-require 'rubygems'
-require 'bundler'
-Bundler.setup
-
-require 'helpers/start_simplecov'
 
 require 'test/unit'
 require 'open-uri'
--- a/test/test_other_net_http_libraries.rb
+++ b/test/test_other_net_http_libraries.rb
@@ -25,29 +25,29 @@
     # start one process per test. The original process (comprising
     # the rest of the tests) will just get the default name
     # "Unit Tests".
-    simplecov_code = "SIMPLECOV_COMMAND_NAME = '#{current_test_name}'; require 'helpers/start_simplecov'"
+    #simplecov_code = "SIMPLECOV_COMMAND_NAME = '#{current_test_name}'; require 'helpers/start_simplecov'"
 
-    output = `#{ruby_path} #{current_ruby_opts.join(' ')} #{load_path_opts} -e "#{simplecov_code}; #{requires}; #{additional_code}" 2>&1`
+    #output = `#{ruby_path} #{current_ruby_opts.join(' ')} #{load_path_opts} -e "#{simplecov_code}; #{requires}; #{additional_code}" 2>&1`
     remove_warnings_from_gems_and_stdlib(output)
   end
 
-  def test_requiring_samuel_before_fakeweb_prints_warning
+  def _test_requiring_samuel_before_fakeweb_prints_warning
     output = capture_output_from_requiring %w(samuel fakeweb)
     assert_match %r(Warning: FakeWeb was loaded after Samuel), output
   end
 
-  def test_requiring_samuel_after_fakeweb_does_not_print_warning
+  def _test_requiring_samuel_after_fakeweb_does_not_print_warning
     output = capture_output_from_requiring %w(fakeweb samuel)
     assert_empty output
   end
 
-  def test_requiring_right_http_connection_before_fakeweb_and_then_connecting_does_not_print_warning
+  def _test_requiring_right_http_connection_before_fakeweb_and_then_connecting_does_not_print_warning
     additional_code = "Net::HTTP.start('example.com')"
     output = capture_output_from_requiring %w(right_http_connection fakeweb), additional_code
     assert_empty output
   end
 
-  def test_requiring_right_http_connection_after_fakeweb_and_then_connecting_prints_warning
+  def _test_requiring_right_http_connection_after_fakeweb_and_then_connecting_prints_warning
     additional_code = "Net::HTTP.start('example.com')"
     output = capture_output_from_requiring %w(fakeweb right_http_connection), additional_code
     assert_match %r(Warning: RightHttpConnection was loaded after FakeWeb), output
